I"g<blockquote>
  <p>프로그래머스 주식가격 문제</p>
</blockquote>

<h2 id="문제-설명">문제 설명</h2>
<p>초 단위로 기록된 주식가격이 담긴 배열 prices가 매개변수로 주어질 때, 가격이 떨어지지 않은 기간은 몇 초인지를 return 하도록 solution 함수를 완성하세요.</p>

<h2 id="제한사항">제한사항</h2>
<p>prices의 각 가격은 1 이상 10,000 이하인 자연수입니다.<br />
prices의 길이는 2 이상 100,000 이하입니다.</p>

<h2 id="입출력-예">입출력 예</h2>
<p>prices<br />
[1, 2, 3, 2, 3]	<br />
return<br />
[4, 3, 1, 1, 0]<br /></p>

<h2 id="입출력-예-설명">입출력 예 설명</h2>
<p>1초 시점의 ₩1은 끝까지 가격이 떨어지지 않았습니다.<br />
2초 시점의 ₩2은 끝까지 가격이 떨어지지 않았습니다.<br />
3초 시점의 ₩3은 1초뒤에 가격이 떨어집니다. 따라서 1초간 가격이 떨어지지 않은 것으로 봅니다.<br />
4초 시점의 ₩2은 1초간 가격이 떨어지지 않았습니다.<br />
5초 시점의 ₩3은 0초간 가격이 떨어지지 않았습니다.<br /></p>

<h3 id="문제-풀이">문제 풀이</h3>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>import java.util.*;

class Solution {
    public int[] solution(int[] prices) {
        int[] answer = new int[prices.length];
        
        for(int i = 0 ; i &lt; prices.length - 1; i++){
           int val = prices[i];
           int cnt = 0; 
            
           for(int j = i+1 ; j &lt; prices.length ; j++){
               
               if(val &lt;= prices[j]){
                   cnt++;
               }else{
                   cnt++;
                   break;
               }
           }
           answer[i] = cnt;
        }
        
        return answer;
    }
}
</code></pre></div></div>

<h2 id="정답해설">정답해설</h2>

<p>스택아니면 큐를 써써 풀수도 있지만 일단은 그냥 풀어봤다.  <br />
이중포문으로 자신보다 크면 카운트를 늘리고 작으면 카운트를 늘리고 바로 빠져나와서 초를 세준다.</p>
:ET